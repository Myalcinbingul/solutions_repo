{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1: Investigating the Range as a Function of Launch Angle Motivation Projectile motion is a classic physics topic that helps explain the motion of objects under gravity. Our goal is to understand how the range of a projectile depends on the launch angle , both: analytically (with equations) and numerically (via Python simulations) We\u2019ll start with no air resistance and gradually introduce more realistic effects like air drag , wind , and numerical simulation techniques . 1. Differential Equations of Motion Without Air Resistance We apply Newton\u2019s Second Law: \\[ \\vec{F} = m\\vec{a} \\] 2. Numerical Solution (With Air Resistance) Drag Force: \\(\\vec{F}_{drag} = -k\\vec{v}\\) Horizontal direction: $$ \\frac{d^2x}{dt^2} = 0 \\quad \\Rightarrow \\quad \\frac{dx}{dt} = v_0 \\cos(\\theta) $$ Vertical direction: $$ \\frac{d^2y}{dt^2} = -g \\quad \\Rightarrow \\quad \\frac{dy}{dt} = v_0 \\sin(\\theta) - gt $$ With Air Resistance (Linear Drag) Air drag is modeled as a force proportional to velocity: \\[ \\vec{F}_{\\text{drag}} = -k \\vec{v} \\] - Horizontal direction: \\[ \\frac{dv_x}{dt} = -k v_x \\] - Vertical direction: \\[ \\frac{dv_y}{dt} = -g - k v_y \\] These are first-order differential equations that generally require numerical methods (like Euler\u2019s or Runge-Kutta) to solve. 2. Kinematic Equations For a projectile launched from height \\(h\\) , initial speed \\(v_0\\) , and angle \\(\\theta\\) , the motion can be described by: - Horizontal displacement : $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ - Vertical displacement : $$ y(t) = h + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 $$ - Horizontal velocity : $$ v_x = v_0 \\cos(\\theta) $$ - Vertical velocity : $$ v_y(t) = v_0 \\sin(\\theta) - g t $$ - Speed at time \\( t \\) : $$ v(t) = \\sqrt{v_x^2 + v_y(t)^2} $$ Where: \\(g\\) is the acceleration due to gravity (typically \\(9.81 \\, \\text{m/s}^2\\) ), \\(t\\) is the time elapsed, \\(x(t)\\) and \\(y(t)\\) are the positions at time \\(t\\) , \\(v_x\\) , \\(v_y(t)\\) are the velocity components. Horizontal position: $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ Vertical position: $$ y(t) = h + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 $$ \u23f1 3. Time of Flight We want to find the total time \\( t \\) the projectile stays in the air. Set the vertical position \\( y(t) = 0 \\) to find when the projectile returns to ground level. From the kinematic equation: \\[ y(t) = h + v_0 \\sin(\\theta)t - \\frac{1}{2}gt^2 \\] Set \\( y(t) = 0 \\) : \\[ 0 = h + v_0 \\sin(\\theta)t - \\frac{1}{2}gt^2 \\] This is a quadratic equation in \\( t \\) : \\[ \\frac{1}{2}gt^2 - v_0 \\sin(\\theta)t - h = 0 \\] Solve using the quadratic formula: \\[ t = \\frac{v_0 \\sin(\\theta) + \\sqrt{(v_0 \\sin(\\theta))^2 + 2gh}}{g} \\] Note: We discard the negative root since time cannot be negative. 4. Range of the Projectile The range is the horizontal distance when \\( y = 0 \\) : \\[ R = v_0 \\cos(\\theta) \\cdot t \\] If \\( h = 0 \\) , simplifies to: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Insight : Maximum range occurs when \\[ \\theta = 45^\\circ \\] import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # gravity (m/s^2) # Function to generate projectile motion def projectile_motion(v0, theta_deg, h=0, dt=0.01): theta = np.radians(theta_deg) vx = v0 * np.cos(theta) vy = v0 * np.sin(theta) x, y = [0], [h] t = 0 while y[-1] >= 0: t += dt x.append(vx * t) y.append(h + vy * t - 0.5 * g * t**2) return x, y # -------- Plot (a): Varying Initial Velocity, \u03b8 = 45\u00b0 -------- v0_list = [30, 40, 50] theta_fixed = 45 plt.figure(figsize=(10, 5)) for v0 in v0_list: x, y = projectile_motion(v0, theta_fixed) plt.plot(x, y, label=f'$v_0$ = {v0} m/s') plt.title('(a) Varying Initial Velocity at $\\\\theta$ = 45\u00b0') plt.xlabel('Range (m)') plt.ylabel('Height (m)') plt.grid(True) plt.legend() plt.axis('equal') plt.show() # -------- Plot (b): Varying Angle, v0 = 50 m/s -------- theta_list = [15, 45, 75] v0_fixed = 50 plt.figure(figsize=(10, 5)) for theta in theta_list: x, y = projectile_motion(v0_fixed, theta) plt.plot(x, y, label=f'$\\\\theta$ = {theta}\u00b0') plt.title('(b) Varying Launch Angle at $v_0$ = 50 m/s') plt.xlabel('Range (m)') plt.ylabel('Height (m)') plt.grid(True) plt.legend() plt.axis('equal') plt.show() 5. Example Calculations Example 1: Finding the Maximum Range If \\(v_0 = 20\\) m/s and \\(h=0\\) , \\[ R = \\frac{20^2 \\sin(2 \\times 45^\\circ)}{9.81} \\approx 40.8 \\text{ m} \\] Example 2: Effect of Launch Height If \\(v_0 = 20\\) m/s and \\(h=5\\) m, Using the general range formula, we get: \\[ R \\approx 45.2 \\text{ m} \\] Open in Google Colab","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1-investigating-the-range-as-a-function-of-launch-angle","text":"","title":"Problem 1: Investigating the Range as a Function of Launch Angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion is a classic physics topic that helps explain the motion of objects under gravity. Our goal is to understand how the range of a projectile depends on the launch angle , both: analytically (with equations) and numerically (via Python simulations) We\u2019ll start with no air resistance and gradually introduce more realistic effects like air drag , wind , and numerical simulation techniques .","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-differential-equations-of-motion","text":"","title":"1. Differential Equations of Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#without-air-resistance","text":"We apply Newton\u2019s Second Law: \\[ \\vec{F} = m\\vec{a} \\]","title":"Without Air Resistance"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-numerical-solution-with-air-resistance","text":"Drag Force: \\(\\vec{F}_{drag} = -k\\vec{v}\\) Horizontal direction: $$ \\frac{d^2x}{dt^2} = 0 \\quad \\Rightarrow \\quad \\frac{dx}{dt} = v_0 \\cos(\\theta) $$ Vertical direction: $$ \\frac{d^2y}{dt^2} = -g \\quad \\Rightarrow \\quad \\frac{dy}{dt} = v_0 \\sin(\\theta) - gt $$","title":"2. Numerical Solution (With Air Resistance)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#with-air-resistance-linear-drag","text":"Air drag is modeled as a force proportional to velocity: \\[ \\vec{F}_{\\text{drag}} = -k \\vec{v} \\]","title":"With Air Resistance (Linear Drag)"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#-horizontal-direction","text":"\\[ \\frac{dv_x}{dt} = -k v_x \\]","title":"- Horizontal direction:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#-vertical-direction","text":"\\[ \\frac{dv_y}{dt} = -g - k v_y \\] These are first-order differential equations that generally require numerical methods (like Euler\u2019s or Runge-Kutta) to solve.","title":"- Vertical direction:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-kinematic-equations","text":"For a projectile launched from height \\(h\\) , initial speed \\(v_0\\) , and angle \\(\\theta\\) , the motion can be described by:","title":"2. Kinematic Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#-horizontal-displacement","text":"$$ x(t) = v_0 \\cos(\\theta) \\cdot t $$","title":"- Horizontal displacement:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#-vertical-displacement","text":"$$ y(t) = h + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 $$","title":"- Vertical displacement:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#-horizontal-velocity","text":"$$ v_x = v_0 \\cos(\\theta) $$","title":"- Horizontal velocity:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#-vertical-velocity","text":"$$ v_y(t) = v_0 \\sin(\\theta) - g t $$","title":"- Vertical velocity:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#-speed-at-time-t","text":"$$ v(t) = \\sqrt{v_x^2 + v_y(t)^2} $$ Where: \\(g\\) is the acceleration due to gravity (typically \\(9.81 \\, \\text{m/s}^2\\) ), \\(t\\) is the time elapsed, \\(x(t)\\) and \\(y(t)\\) are the positions at time \\(t\\) , \\(v_x\\) , \\(v_y(t)\\) are the velocity components. Horizontal position: $$ x(t) = v_0 \\cos(\\theta) \\cdot t $$ Vertical position: $$ y(t) = h + v_0 \\sin(\\theta) \\cdot t - \\frac{1}{2}gt^2 $$","title":"- Speed at time \\( t \\):"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-time-of-flight","text":"We want to find the total time \\( t \\) the projectile stays in the air. Set the vertical position \\( y(t) = 0 \\) to find when the projectile returns to ground level. From the kinematic equation: \\[ y(t) = h + v_0 \\sin(\\theta)t - \\frac{1}{2}gt^2 \\] Set \\( y(t) = 0 \\) : \\[ 0 = h + v_0 \\sin(\\theta)t - \\frac{1}{2}gt^2 \\] This is a quadratic equation in \\( t \\) : \\[ \\frac{1}{2}gt^2 - v_0 \\sin(\\theta)t - h = 0 \\] Solve using the quadratic formula: \\[ t = \\frac{v_0 \\sin(\\theta) + \\sqrt{(v_0 \\sin(\\theta))^2 + 2gh}}{g} \\] Note: We discard the negative root since time cannot be negative.","title":"\u23f1 3. Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-range-of-the-projectile","text":"The range is the horizontal distance when \\( y = 0 \\) : \\[ R = v_0 \\cos(\\theta) \\cdot t \\] If \\( h = 0 \\) , simplifies to: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] Insight : Maximum range occurs when \\[ \\theta = 45^\\circ \\] import numpy as np import matplotlib.pyplot as plt # Constants g = 9.81 # gravity (m/s^2) # Function to generate projectile motion def projectile_motion(v0, theta_deg, h=0, dt=0.01): theta = np.radians(theta_deg) vx = v0 * np.cos(theta) vy = v0 * np.sin(theta) x, y = [0], [h] t = 0 while y[-1] >= 0: t += dt x.append(vx * t) y.append(h + vy * t - 0.5 * g * t**2) return x, y # -------- Plot (a): Varying Initial Velocity, \u03b8 = 45\u00b0 -------- v0_list = [30, 40, 50] theta_fixed = 45 plt.figure(figsize=(10, 5)) for v0 in v0_list: x, y = projectile_motion(v0, theta_fixed) plt.plot(x, y, label=f'$v_0$ = {v0} m/s') plt.title('(a) Varying Initial Velocity at $\\\\theta$ = 45\u00b0') plt.xlabel('Range (m)') plt.ylabel('Height (m)') plt.grid(True) plt.legend() plt.axis('equal') plt.show() # -------- Plot (b): Varying Angle, v0 = 50 m/s -------- theta_list = [15, 45, 75] v0_fixed = 50 plt.figure(figsize=(10, 5)) for theta in theta_list: x, y = projectile_motion(v0_fixed, theta) plt.plot(x, y, label=f'$\\\\theta$ = {theta}\u00b0') plt.title('(b) Varying Launch Angle at $v_0$ = 50 m/s') plt.xlabel('Range (m)') plt.ylabel('Height (m)') plt.grid(True) plt.legend() plt.axis('equal') plt.show()","title":"4. Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-example-calculations","text":"","title":"5. Example Calculations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#example-1-finding-the-maximum-range","text":"If \\(v_0 = 20\\) m/s and \\(h=0\\) , \\[ R = \\frac{20^2 \\sin(2 \\times 45^\\circ)}{9.81} \\approx 40.8 \\text{ m} \\]","title":"Example 1: Finding the Maximum Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#example-2-effect-of-launch-height","text":"If \\(v_0 = 20\\) m/s and \\(h=5\\) m, Using the general range formula, we get: \\[ R \\approx 45.2 \\text{ m} \\] Open in Google Colab","title":"Example 2: Effect of Launch Height"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Forced Damped Pendulum Analysis 1. Introduction The forced damped pendulum is a fundamental system in nonlinear dynamics. It exhibits a wide range of behaviors, from periodic motion to chaos, depending on system parameters such as damping, driving frequency, and amplitude. Understanding its dynamics is crucial in physics, engineering, and even biological systems. This study explores the theoretical foundation of the system, computational simulations, and visualizations to better understand its motion. 2. Theoretical Foundation The motion of a forced damped pendulum is governed by the differential equation: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\sin\\theta = A\\cos(\\omega t) \\] where: - \\(\\theta\\) is the angular displacement, - \\(b\\) is the damping coefficient, - \\(g\\) is the gravitational acceleration, - \\(L\\) is the pendulum length, - \\(A\\) is the external forcing amplitude, - \\(\\omega\\) is the driving frequency. 2.1 Approximate Solution for Small-Angle Oscillations For small angles ( \\(\\theta \\approx 0\\) ), we use the linear approximation: \\[ \\sin\\theta \\approx \\theta \\] which simplifies the equation to: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\theta = A\\cos(\\omega t) \\] This is a linear nonhomogeneous differential equation, with the solution comprising: Homogeneous solution (natural response): $$ \\theta_h (t) = C_1 e^{-\\frac{b}{2} t} \\cos \\left( \\omega_0 t + \\phi \\right) $$ where \\(\\omega_0 = \\sqrt{\\frac{g}{L} - \\frac{b^2}{4}}\\) is the damped natural frequency. Particular solution (steady-state response): $$ \\theta_p (t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (b\\omega)^2}} \\cos(\\omega t - \\delta) $$ where \\(\\delta\\) is the phase shift. Thus, the full solution is: \\[ \\theta (t) = \\theta_h (t) + \\theta_p (t) \\] 2.2 Resonance Conditions Resonance occurs when the driving frequency \\(\\omega\\) is close to the system\u2019s natural frequency. At resonance: \\[ \\omega \\approx \\omega_0 \\] The system absorbs maximum energy, leading to large oscillations, particularly when damping is low. 3. Numerical Simulation We numerically solve the equation using Python to analyze how different parameters influence \\(\\theta(t)\\) . 3.1 Time Evolution of \\(\\theta(t)\\) import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # System parameters g = 9.81 # gravity (m/s^2) L = 1.0 # pendulum length (m) b = 0.2 # damping coefficient A = 1.2 # driving amplitude omega = 2.0 # driving frequency def pendulum(t, y): theta, omega_dot = y dtheta_dt = omega_dot domega_dt = -b * omega_dot - (g/L) * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] # Solve ODE t_span = (0, 50) y0 = [0.1, 0] # Small initial displacement t_eval = np.linspace(*t_span, 1000) sol = solve_ivp(pendulum, t_span, y0, t_eval=t_eval) # Plot solution plt.figure(figsize=(8, 5)) plt.plot(sol.t, sol.y[0], label='Angular Displacement') plt.xlabel('Time (s)') plt.ylabel('Theta (rad)') plt.title('Time Evolution of Theta') plt.legend() plt.grid() plt.show() Figure 1: Time evolution of \\(\\theta(t)\\) for given system parameters. 3.2 Regular vs. Chaotic Motion The transition from regular to chaotic motion occurs when forcing parameters ( \\(A\\) , \\(\\omega\\) ) are increased. Regular Motion (Low Forcing) : The system oscillates predictably. Chaotic Motion (High Forcing) : Motion becomes sensitive to initial conditions. Bifurcation Diagram Figure 2: Bifurcation diagram showing how \\(\\theta_{\\max}\\) changes with \\(\\omega\\) . omega_values = np.linspace(1.0, 2.5, 50) theta_max = [] for w in omega_values: omega = w sol = solve_ivp(pendulum, t_span, y0, t_eval=t_eval) theta_max.append(np.max(sol.y[0][-100:])) plt.figure(figsize=(8, 5)) plt.plot(omega_values, theta_max, 'bo', markersize=2) plt.xlabel('Driving Frequency \u03c9') plt.ylabel('Max Theta (rad)') plt.title('Bifurcation Diagram') plt.grid() plt.show() Figure 3: Phase space plot depicting system behavior. 1. Simple Pendulum Equation of Motion: \\[ \\frac{d^2 \\theta}{dt^2} + \\frac{g}{L} \\sin(\\theta) = 0 \\] 2. Damped Pendulum \\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin\\theta = 0 \\] 3. Forced Pendulum \\[ \\frac{d^2\\theta}{dt^2} + \\frac{g}{L} \\sin\\theta = A \\cos(\\omega t) \\] 4. Forced Damped Pendulum \\[ \\frac{d^2 \\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\] 5. Chaotic/Resonant Pendulum \\[ \\frac{d^2 \\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\] 4. Practical Applications Energy Harvesting: Converts mechanical oscillations into usable energy. Structural Engineering: Understanding resonance in bridges. Electrical Engineering: Analogous to forced RLC circuits. 5. Discussion 5.1 Limitations The small-angle approximation is inaccurate for large displacements. Real-world damping is often nonlinear. External forcing may not be purely periodic. 5.2 Future Extensions Explore nonlinear damping (e.g., air resistance effects). Analyze stochastic forcing (random perturbations in real-world applications). 6. Conclusion This study demonstrates the transition from simple periodic motion to chaotic behavior in the forced damped pendulum. The combination of theoretical analysis and numerical simulation provides a deep insight into the system's behavior under different conditions. Open in Google Colab","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#forced-damped-pendulum-analysis","text":"","title":"Forced Damped Pendulum Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-introduction","text":"The forced damped pendulum is a fundamental system in nonlinear dynamics. It exhibits a wide range of behaviors, from periodic motion to chaos, depending on system parameters such as damping, driving frequency, and amplitude. Understanding its dynamics is crucial in physics, engineering, and even biological systems. This study explores the theoretical foundation of the system, computational simulations, and visualizations to better understand its motion.","title":"1. Introduction"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-theoretical-foundation","text":"The motion of a forced damped pendulum is governed by the differential equation: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\sin\\theta = A\\cos(\\omega t) \\] where: - \\(\\theta\\) is the angular displacement, - \\(b\\) is the damping coefficient, - \\(g\\) is the gravitational acceleration, - \\(L\\) is the pendulum length, - \\(A\\) is the external forcing amplitude, - \\(\\omega\\) is the driving frequency.","title":"2. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#21-approximate-solution-for-small-angle-oscillations","text":"For small angles ( \\(\\theta \\approx 0\\) ), we use the linear approximation: \\[ \\sin\\theta \\approx \\theta \\] which simplifies the equation to: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L}\\theta = A\\cos(\\omega t) \\] This is a linear nonhomogeneous differential equation, with the solution comprising: Homogeneous solution (natural response): $$ \\theta_h (t) = C_1 e^{-\\frac{b}{2} t} \\cos \\left( \\omega_0 t + \\phi \\right) $$ where \\(\\omega_0 = \\sqrt{\\frac{g}{L} - \\frac{b^2}{4}}\\) is the damped natural frequency. Particular solution (steady-state response): $$ \\theta_p (t) = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (b\\omega)^2}} \\cos(\\omega t - \\delta) $$ where \\(\\delta\\) is the phase shift. Thus, the full solution is: \\[ \\theta (t) = \\theta_h (t) + \\theta_p (t) \\]","title":"2.1 Approximate Solution for Small-Angle Oscillations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#22-resonance-conditions","text":"Resonance occurs when the driving frequency \\(\\omega\\) is close to the system\u2019s natural frequency. At resonance: \\[ \\omega \\approx \\omega_0 \\] The system absorbs maximum energy, leading to large oscillations, particularly when damping is low.","title":"2.2 Resonance Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-numerical-simulation","text":"We numerically solve the equation using Python to analyze how different parameters influence \\(\\theta(t)\\) .","title":"3. Numerical Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#31-time-evolution-of-thetat","text":"import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp # System parameters g = 9.81 # gravity (m/s^2) L = 1.0 # pendulum length (m) b = 0.2 # damping coefficient A = 1.2 # driving amplitude omega = 2.0 # driving frequency def pendulum(t, y): theta, omega_dot = y dtheta_dt = omega_dot domega_dt = -b * omega_dot - (g/L) * np.sin(theta) + A * np.cos(omega * t) return [dtheta_dt, domega_dt] # Solve ODE t_span = (0, 50) y0 = [0.1, 0] # Small initial displacement t_eval = np.linspace(*t_span, 1000) sol = solve_ivp(pendulum, t_span, y0, t_eval=t_eval) # Plot solution plt.figure(figsize=(8, 5)) plt.plot(sol.t, sol.y[0], label='Angular Displacement') plt.xlabel('Time (s)') plt.ylabel('Theta (rad)') plt.title('Time Evolution of Theta') plt.legend() plt.grid() plt.show() Figure 1: Time evolution of \\(\\theta(t)\\) for given system parameters.","title":"3.1 Time Evolution of \\(\\theta(t)\\)"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#32-regular-vs-chaotic-motion","text":"The transition from regular to chaotic motion occurs when forcing parameters ( \\(A\\) , \\(\\omega\\) ) are increased. Regular Motion (Low Forcing) : The system oscillates predictably. Chaotic Motion (High Forcing) : Motion becomes sensitive to initial conditions.","title":"3.2 Regular vs. Chaotic Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#bifurcation-diagram","text":"Figure 2: Bifurcation diagram showing how \\(\\theta_{\\max}\\) changes with \\(\\omega\\) . omega_values = np.linspace(1.0, 2.5, 50) theta_max = [] for w in omega_values: omega = w sol = solve_ivp(pendulum, t_span, y0, t_eval=t_eval) theta_max.append(np.max(sol.y[0][-100:])) plt.figure(figsize=(8, 5)) plt.plot(omega_values, theta_max, 'bo', markersize=2) plt.xlabel('Driving Frequency \u03c9') plt.ylabel('Max Theta (rad)') plt.title('Bifurcation Diagram') plt.grid() plt.show() Figure 3: Phase space plot depicting system behavior.","title":"Bifurcation Diagram"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-simple-pendulum","text":"Equation of Motion: \\[ \\frac{d^2 \\theta}{dt^2} + \\frac{g}{L} \\sin(\\theta) = 0 \\]","title":"1. Simple Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-damped-pendulum","text":"\\[ \\frac{d^2\\theta}{dt^2} + \\gamma \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin\\theta = 0 \\]","title":"2. Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-forced-pendulum","text":"\\[ \\frac{d^2\\theta}{dt^2} + \\frac{g}{L} \\sin\\theta = A \\cos(\\omega t) \\]","title":"3. Forced Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-forced-damped-pendulum","text":"\\[ \\frac{d^2 \\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\]","title":"4. Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-chaoticresonant-pendulum","text":"\\[ \\frac{d^2 \\theta}{dt^2} + b \\frac{d\\theta}{dt} + \\frac{g}{L} \\sin(\\theta) = A \\cos(\\omega t) \\]","title":"5. Chaotic/Resonant Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-practical-applications","text":"Energy Harvesting: Converts mechanical oscillations into usable energy. Structural Engineering: Understanding resonance in bridges. Electrical Engineering: Analogous to forced RLC circuits.","title":"4. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-discussion","text":"","title":"5. Discussion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#51-limitations","text":"The small-angle approximation is inaccurate for large displacements. Real-world damping is often nonlinear. External forcing may not be purely periodic.","title":"5.1 Limitations"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#52-future-extensions","text":"Explore nonlinear damping (e.g., air resistance effects). Analyze stochastic forcing (random perturbations in real-world applications).","title":"5.2 Future Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#6-conclusion","text":"This study demonstrates the transition from simple periodic motion to chaotic behavior in the forced damped pendulum. The combination of theoretical analysis and numerical simulation provides a deep insight into the system's behavior under different conditions. Open in Google Colab","title":"6. Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Orbital Period and Orbital Radius: Kepler's Third Law Analysis This document analyzes the relationship between the square of the orbital period ( \\(T^2\\) ) and the cube of the orbital radius ( \\(r^3\\) ), as described by Kepler's Third Law for circular orbits. Contents: - Derivation of Kepler\u2019s Third Law - Astronomical implications and applications - Real-world examples: Earth, Moon, Solar System - Graphical verification of \\(T^2 \\propto r^3\\) 1. Introduction Kepler's Third Law states that the square of the orbital period is proportional to the cube of the orbital radius: \\[ T^2 \\propto r^3 \\] This law is fundamental in astronomy, used for studying planetary motion, satellite orbits, and exoplanets. 2. Definitions and Formulas 2.1 Definitions Orbital Period ( \\(T\\) ) : Time to complete one full orbit. Orbital Radius ( \\(r\\) ) : Distance from the center of the orbiting body to the center of the primary mass. Gravitational Constant ( \\(G\\) ) : $$ G = 6.674 \\times 10^{-11} \\, \\text{m}^3 \\cdot \\text{kg}^{-1} \\cdot \\text{s}^{-2} $$ 2.2 Equations Centripetal force: $$ F_c = \\frac{m v^2}{r} $$ Gravitational force: $$ F_g = \\frac{G M m}{r^2} $$ Orbital velocity (for circular orbit): $$ v = \\frac{2 \\pi r}{T} $$ Kepler's Third Law (derived below): $$ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) r^3 $$ 3. Derivation of Kepler\u2019s Third Law Starting with force balance: Set gravitational and centripetal forces equal: $$ \\frac{G M m}{r^2} = \\frac{m v^2}{r} $$ Cancel \\(m\\) and simplify: $$ \\frac{G M}{r} = v^2 $$ Replace \\(v\\) using \\(v = \\frac{2 \\pi r}{T}\\) : $$ v^2 = \\frac{4 \\pi^2 r^2}{T^2} $$ Substitute into the previous equation: $$ \\frac{G M}{r} = \\frac{4 \\pi^2 r^2}{T^2} $$ Rearranging gives: $$ G M T^2 = 4 \\pi^2 r^3 $$ Solving for \\(T^2\\) : $$ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) r^3 $$ This confirms that \\(T^2 \\propto r^3\\) . 4. Applications in Astronomy Planetary Mass Estimation : $$ M = \\frac{4 \\pi^2 r^3}{G T^2} $$ Satellite Design : Determines stable orbital periods. Elliptical Orbits (use semi-major axis \\(a\\) ): $$ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) a^3 $$ Exoplanet Systems : Estimate mass of stars from observed \\(T\\) and \\(a\\) . 5. Real-World Examples 5.1 Moon Orbiting Earth Given: - \\(T = 2.36 \\times 10^6\\) s - \\(r = 3.844 \\times 10^8\\) m Estimate Earth's mass: $$ M = \\frac{4 \\pi^2 r^3}{G T^2} \\approx 5.97 \\times 10^{24} \\, \\text{kg} $$ 5.2 Earth and Mars (Orbiting the Sun) Earth: \\(T = 3.156 \\times 10^7\\) s, \\(r = 1.496 \\times 10^{11}\\) m Mars: \\(T = 5.94 \\times 10^7\\) s, \\(r = 2.279 \\times 10^{11}\\) m Check: $$ \\frac{T^2}{r^3} \\approx \\text{constant} \\quad \\Rightarrow \\quad \\text{Kepler\u2019s law holds} $$ 6. Elliptical Orbit Generalization For non-circular orbits, use the semi-major axis \\(a\\) : \\[ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) a^3 \\] Applicable to: - Planets - Moons - Comets - Binary stars 7. Extension to Elliptical Orbits For elliptical orbits, Kepler\u2019s Third Law is generalized by replacing the orbital radius \\(r\\) with the semi-major axis \\(a\\) : \\[ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) a^3 \\] This accounts for the fact that the radius is not constant in an elliptical path. Key Applications: Planetary Orbits : Most planetary orbits are slightly elliptical. Example: Earth\u2019s eccentricity is approximately \\(e \\approx 0.0167\\) . Comets and Asteroids : Often follow highly elliptical orbits with large semi-major axes. Binary Star Systems : The law applies to two stars orbiting their mutual center of mass. Although the derivation for elliptical orbits involves Kepler\u2019s First and Second Laws, the resulting formula retains the same structure. This makes Kepler\u2019s Third Law broadly applicable to a wide range of celestial systems. 8. Conclusion Kepler\u2019s Third Law: \\[ T^2 \\propto r^3 \\] is a fundamental principle of orbital mechanics. It allows us to: Estimate the masses of celestial bodies Determine orbital distances Predict satellite trajectories This document has: Derived the law using Newtonian mechanics Verified its validity through real-world data (e.g., Moon and Solar System planets) Illustrated the relationship graphically and numerically Extended its use to elliptical orbits Further Exploration: Simulate elliptical orbits using numerical integration (e.g., solving Kepler\u2019s Equation) Use exoplanet orbital data to estimate stellar masses Investigate relativistic corrections in strong gravitational fields This analysis provides a solid foundation for modeling orbits in both classical and more advanced astrophysical contexts. Open in Google Colab","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#orbital-period-and-orbital-radius-keplers-third-law-analysis","text":"This document analyzes the relationship between the square of the orbital period ( \\(T^2\\) ) and the cube of the orbital radius ( \\(r^3\\) ), as described by Kepler's Third Law for circular orbits. Contents: - Derivation of Kepler\u2019s Third Law - Astronomical implications and applications - Real-world examples: Earth, Moon, Solar System - Graphical verification of \\(T^2 \\propto r^3\\)","title":"Orbital Period and Orbital Radius: Kepler's Third Law Analysis"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-introduction","text":"Kepler's Third Law states that the square of the orbital period is proportional to the cube of the orbital radius: \\[ T^2 \\propto r^3 \\] This law is fundamental in astronomy, used for studying planetary motion, satellite orbits, and exoplanets.","title":"1. Introduction"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-definitions-and-formulas","text":"","title":"2. Definitions and Formulas"},{"location":"1%20Physics/2%20Gravity/Problem_1/#21-definitions","text":"Orbital Period ( \\(T\\) ) : Time to complete one full orbit. Orbital Radius ( \\(r\\) ) : Distance from the center of the orbiting body to the center of the primary mass. Gravitational Constant ( \\(G\\) ) : $$ G = 6.674 \\times 10^{-11} \\, \\text{m}^3 \\cdot \\text{kg}^{-1} \\cdot \\text{s}^{-2} $$","title":"2.1 Definitions"},{"location":"1%20Physics/2%20Gravity/Problem_1/#22-equations","text":"Centripetal force: $$ F_c = \\frac{m v^2}{r} $$ Gravitational force: $$ F_g = \\frac{G M m}{r^2} $$ Orbital velocity (for circular orbit): $$ v = \\frac{2 \\pi r}{T} $$ Kepler's Third Law (derived below): $$ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) r^3 $$","title":"2.2 Equations"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-derivation-of-keplers-third-law","text":"Starting with force balance: Set gravitational and centripetal forces equal: $$ \\frac{G M m}{r^2} = \\frac{m v^2}{r} $$ Cancel \\(m\\) and simplify: $$ \\frac{G M}{r} = v^2 $$ Replace \\(v\\) using \\(v = \\frac{2 \\pi r}{T}\\) : $$ v^2 = \\frac{4 \\pi^2 r^2}{T^2} $$ Substitute into the previous equation: $$ \\frac{G M}{r} = \\frac{4 \\pi^2 r^2}{T^2} $$ Rearranging gives: $$ G M T^2 = 4 \\pi^2 r^3 $$ Solving for \\(T^2\\) : $$ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) r^3 $$ This confirms that \\(T^2 \\propto r^3\\) .","title":"3. Derivation of Kepler\u2019s Third Law"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-applications-in-astronomy","text":"Planetary Mass Estimation : $$ M = \\frac{4 \\pi^2 r^3}{G T^2} $$ Satellite Design : Determines stable orbital periods. Elliptical Orbits (use semi-major axis \\(a\\) ): $$ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) a^3 $$ Exoplanet Systems : Estimate mass of stars from observed \\(T\\) and \\(a\\) .","title":"4. Applications in Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#5-real-world-examples","text":"","title":"5. Real-World Examples"},{"location":"1%20Physics/2%20Gravity/Problem_1/#51-moon-orbiting-earth","text":"Given: - \\(T = 2.36 \\times 10^6\\) s - \\(r = 3.844 \\times 10^8\\) m Estimate Earth's mass: $$ M = \\frac{4 \\pi^2 r^3}{G T^2} \\approx 5.97 \\times 10^{24} \\, \\text{kg} $$","title":"5.1 Moon Orbiting Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#52-earth-and-mars-orbiting-the-sun","text":"Earth: \\(T = 3.156 \\times 10^7\\) s, \\(r = 1.496 \\times 10^{11}\\) m Mars: \\(T = 5.94 \\times 10^7\\) s, \\(r = 2.279 \\times 10^{11}\\) m Check: $$ \\frac{T^2}{r^3} \\approx \\text{constant} \\quad \\Rightarrow \\quad \\text{Kepler\u2019s law holds} $$","title":"5.2 Earth and Mars (Orbiting the Sun)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#6-elliptical-orbit-generalization","text":"For non-circular orbits, use the semi-major axis \\(a\\) : \\[ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) a^3 \\] Applicable to: - Planets - Moons - Comets - Binary stars","title":"6. Elliptical Orbit Generalization"},{"location":"1%20Physics/2%20Gravity/Problem_1/#7-extension-to-elliptical-orbits","text":"For elliptical orbits, Kepler\u2019s Third Law is generalized by replacing the orbital radius \\(r\\) with the semi-major axis \\(a\\) : \\[ T^2 = \\left( \\frac{4 \\pi^2}{G M} \\right) a^3 \\] This accounts for the fact that the radius is not constant in an elliptical path.","title":"7. Extension to Elliptical Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#key-applications","text":"Planetary Orbits : Most planetary orbits are slightly elliptical. Example: Earth\u2019s eccentricity is approximately \\(e \\approx 0.0167\\) . Comets and Asteroids : Often follow highly elliptical orbits with large semi-major axes. Binary Star Systems : The law applies to two stars orbiting their mutual center of mass. Although the derivation for elliptical orbits involves Kepler\u2019s First and Second Laws, the resulting formula retains the same structure. This makes Kepler\u2019s Third Law broadly applicable to a wide range of celestial systems.","title":"Key Applications:"},{"location":"1%20Physics/2%20Gravity/Problem_1/#8-conclusion","text":"Kepler\u2019s Third Law: \\[ T^2 \\propto r^3 \\] is a fundamental principle of orbital mechanics. It allows us to: Estimate the masses of celestial bodies Determine orbital distances Predict satellite trajectories This document has: Derived the law using Newtonian mechanics Verified its validity through real-world data (e.g., Moon and Solar System planets) Illustrated the relationship graphically and numerically Extended its use to elliptical orbits","title":"8. Conclusion"},{"location":"1%20Physics/2%20Gravity/Problem_1/#further-exploration","text":"Simulate elliptical orbits using numerical integration (e.g., solving Kepler\u2019s Equation) Use exoplanet orbital data to estimate stellar masses Investigate relativistic corrections in strong gravitational fields This analysis provides a solid foundation for modeling orbits in both classical and more advanced astrophysical contexts. Open in Google Colab","title":"Further Exploration:"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}